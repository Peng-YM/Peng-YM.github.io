<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Pioneer</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://peng-ym.github.io/"/>
  <updated>2017-12-17T10:34:29.537Z</updated>
  <id>http://peng-ym.github.io/</id>
  
  <author>
    <name>Peng-YM</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在Mac上使用tree命令浏览文件树结构(转)</title>
    <link href="http://peng-ym.github.io/2017/12/17/%E5%9C%A8Mac%E4%B8%8A%E4%BD%BF%E7%94%A8tree%E5%91%BD%E4%BB%A4%E6%B5%8F%E8%A7%88%E6%96%87%E4%BB%B6%E6%A0%91%E7%BB%93%E6%9E%84-%E8%BD%AC/"/>
    <id>http://peng-ym.github.io/2017/12/17/在Mac上使用tree命令浏览文件树结构-转/</id>
    <published>2017-12-17T05:27:57.000Z</published>
    <updated>2017-12-17T10:34:29.537Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用alias命令"><a href="#使用alias命令" class="headerlink" title="使用alias命令"></a>使用alias命令</h2><ol><li><p>编辑<code>.bashrc</code>或者<code>.zshrc</code>，在文件中添加一行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ vim .zshrc</span><br><span class="line"><span class="built_in">alias</span> tree=<span class="string">"find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'"</span></span><br></pre></td></tr></table></figure></li><li><p>应用更改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">source</span> .zshrc</span><br></pre></td></tr></table></figure></li><li><p>在文件夹下使用<code>tree</code>命令就可以看到当前文件夹的层级结构了<br><img src="https://ws1.sinaimg.cn/large/c2dfc71dgy1fmjpgcu6dij20i50hqtaq.jpg" alt="效果图"></p></li></ol><h2 id="安装tree包"><a href="#安装tree包" class="headerlink" title="安装tree包"></a>安装tree包</h2><p>如果想要更多功能，可以直接使用unix的<code>tree</code>包。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install tree</span><br></pre></td></tr></table></figure></p><p><a href="http://osxdaily.com/2016/09/09/view-folder-tree-terminal-mac-os-tree-equivalent/" target="_blank" rel="noopener">原文地址</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;使用alias命令&quot;&gt;&lt;a href=&quot;#使用alias命令&quot; class=&quot;headerlink&quot; title=&quot;使用alias命令&quot;&gt;&lt;/a&gt;使用alias命令&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;编辑&lt;code&gt;.bashrc&lt;/code&gt;或者&lt;code&gt;.zs
      
    
    </summary>
    
    
      <category term="折腾工具" scheme="http://peng-ym.github.io/tags/%E6%8A%98%E8%85%BE%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>利用Python IMAP、SMTP进行邮件收发</title>
    <link href="http://peng-ym.github.io/2017/12/15/%E5%88%A9%E7%94%A8Python-IMAP%E3%80%81SMTP%E8%BF%9B%E8%A1%8C%E9%82%AE%E4%BB%B6%E6%94%B6%E5%8F%91/"/>
    <id>http://peng-ym.github.io/2017/12/15/利用Python-IMAP、SMTP进行邮件收发/</id>
    <published>2017-12-14T16:54:47.000Z</published>
    <updated>2017-12-14T16:54:47.676Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Apache Htpd端口转发配置</title>
    <link href="http://peng-ym.github.io/2017/12/15/Centos%20Apache-Htpd%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E9%85%8D%E7%BD%AE/"/>
    <id>http://peng-ym.github.io/2017/12/15/Centos Apache-Htpd端口转发配置/</id>
    <published>2017-12-14T16:53:26.000Z</published>
    <updated>2017-12-14T17:17:25.783Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装httpd"><a href="#安装httpd" class="headerlink" title="安装httpd"></a>安装httpd</h2><p>Centos 安装httpd非常简单，<code>yum</code>安装即可<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum instal httpd</span><br></pre></td></tr></table></figure></p><h2 id="配置转发规则示例"><a href="#配置转发规则示例" class="headerlink" title="配置转发规则示例"></a>配置转发规则示例</h2><p>在部署Java Web应用时，通常会把应用部署在一个Web容器（如Tomcat），再部署一个HTTP服务器转发请求。</p><p>例如部署Tomcat监听8080端口，部署Apache Httpd监听80端口，再转发给tomcat的8080端口。</p><p>可以在一台服务器上部署多个应用和配置多个域名，对于访问者来说感觉像访问两个不同的网站一样。<br>在示例中启动了两个Tomcat实例，分别监听8080和8081端口，部署两个不同的应用。然后将两个域名均指向这台机器的ip，Apache通过访问者使用的域名来执行不同的转发。</p><a id="more"></a><p>httpd的配置文件位于<code>/etc/httpd/conf/httpd.conf</code>，在文件中添加以下配置：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">NameVirtualHost *:80</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">VirtualHost</span> *<span class="attr">:80</span>&gt;</span></span><br><span class="line">    ServerName www.example.com</span><br><span class="line">    ServerAlias example.com *.example.com</span><br><span class="line">    ProxyPass / http://localhost:8080/</span><br><span class="line">    ProxyPassReverse / http://localhost:8080/</span><br><span class="line"><span class="tag">&lt;/<span class="name">VirtualHost</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">VirtualHost</span> *<span class="attr">:80</span>&gt;</span></span><br><span class="line">    ServerName www.example2.com</span><br><span class="line">    ServerAlias example2.com *.example2.com</span><br><span class="line">    ProxyPass / http://localhost:8081/</span><br><span class="line">    ProxyPassReverse / http://localhost:8081/</span><br><span class="line"><span class="tag">&lt;/<span class="name">VirtualHost</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="常见的问题"><a href="#常见的问题" class="headerlink" title="常见的问题"></a>常见的问题</h2><blockquote><p>Centos下apache启动时httpd: apr_sockaddr_info_get() failed报错</p></blockquote><p>解决办法：<a href="https://www.adminsehow.com/2011/03/how-to-fix-starting-httpd-httpd-apr_sockaddr_info_get-failed/" target="_blank" rel="noopener">reference</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> www.example.com &gt; /etc/hostname</span><br><span class="line">/bin/hostname -F /etc/hostname</span><br><span class="line">/etc/init.d/httpd restart</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装httpd&quot;&gt;&lt;a href=&quot;#安装httpd&quot; class=&quot;headerlink&quot; title=&quot;安装httpd&quot;&gt;&lt;/a&gt;安装httpd&lt;/h2&gt;&lt;p&gt;Centos 安装httpd非常简单，&lt;code&gt;yum&lt;/code&gt;安装即可&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum instal httpd&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;配置转发规则示例&quot;&gt;&lt;a href=&quot;#配置转发规则示例&quot; class=&quot;headerlink&quot; title=&quot;配置转发规则示例&quot;&gt;&lt;/a&gt;配置转发规则示例&lt;/h2&gt;&lt;p&gt;在部署Java Web应用时，通常会把应用部署在一个Web容器（如Tomcat），再部署一个HTTP服务器转发请求。&lt;/p&gt;
&lt;p&gt;例如部署Tomcat监听8080端口，部署Apache Httpd监听80端口，再转发给tomcat的8080端口。&lt;/p&gt;
&lt;p&gt;可以在一台服务器上部署多个应用和配置多个域名，对于访问者来说感觉像访问两个不同的网站一样。&lt;br&gt;在示例中启动了两个Tomcat实例，分别监听8080和8081端口，部署两个不同的应用。然后将两个域名均指向这台机器的ip，Apache通过访问者使用的域名来执行不同的转发。&lt;/p&gt;
    
    </summary>
    
    
      <category term="服务器" scheme="http://peng-ym.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>tmux使用指南</title>
    <link href="http://peng-ym.github.io/2017/12/15/tmux%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    <id>http://peng-ym.github.io/2017/12/15/tmux使用指南/</id>
    <published>2017-12-14T16:18:56.000Z</published>
    <updated>2018-04-08T13:23:04.309Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Tmux 简单来说就是终端里的『窗口管理器』，如果我使用终端登录到远程主机并运行前台程序，那么这个窗口等于就被占用了，想要看一下 CPU 的使用率，就得再连接一次。但是如果在远程主机上运行 tmux，那么就可以开启多个控制台（类似于窗口），相当高效。可以通过下面的视频看看大神操作：</p><center><iframe width="600" height="400" src="https://www.youtube.com/embed/JXwS7z6Dqic" frameborder="0" gesture="media" allow="encrypted-media" allowfullscreen></iframe></center><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>使用包管理工具安装即可。例如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install tmux</span><br></pre></td></tr></table></figure></p><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><blockquote><p>帮助信息</p><ul><li><code>tmux list-keys</code> 列出所有可以的快捷键和其运行的 tmux 命令</li><li><code>tmux list-commands</code> 列出所有的 tmux 命令及其参数</li><li><code>tmux info</code> 列出所有的 session, window, pane, 运行的进程号，等。</li></ul></blockquote><p>更常用的是在 tmux 中直接通过默认前缀 <code>ctrl + b</code> （因为<code>ctrl + b</code>不好按，下面我会将它更改为 <code>ctr + a</code>）之后输入对应命令来操作，具体如下（这里只列出输入默认前缀之后需要输入的操作）：</p><blockquote><p>基本操作：</p><ul><li><code>?</code> 列出所有快捷键</li><li><code>:</code> 进入命令模式</li><li><code>ctrl + z</code> 挂起当前session</li></ul><p>窗口操作</p><ul><li><code>c</code> 创建</li><li><code>&amp;</code> 关闭</li><li><code>[0-9]</code> 切换至指定窗口</li><li><code>p</code> 上一窗口</li><li><code>n</code> 下一窗口</li><li><code>w</code> 窗口列表</li></ul></blockquote><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>系统范围的配置文件是 /etc/tmux.conf，而针对个人的配置文件在 ~/.tmux.conf。</p><p>通过配置文件，可以定义新的快捷键，定义窗口、窗格布局等。</p><p><strong>推荐配置</strong><br><a href="https://github.com/gpakosz/.tmux" target="_blank" rel="noopener">https://github.com/gpakosz/.tmux</a><br>效果图如下：<br><img src="http://ww1.sinaimg.cn/large/c2dfc71dly1fq5kd5qeldg21d60bi1kx.gif" alt="Demo"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;Tmux 简单来说就是终端里的『窗口管理器』，如果我使用终端登录到远程主机并运行前台程序，那么这个窗口等于就被占用了，想要看一下 CPU 的使用率，就得再连接一次。但是如果在远程主机上运行 tmux，那么就可以开启多个控制台（类似于窗口），相当高效。可以通过下面的视频看看大神操作：&lt;/p&gt;
&lt;center&gt;&lt;iframe width=&quot;600&quot; height=&quot;400&quot; src=&quot;https://www.youtube.com/embed/JXwS7z6Dqic&quot; frameborder=&quot;0&quot; gesture=&quot;media&quot; allow=&quot;encrypted-media&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;
    
    </summary>
    
    
      <category term="折腾工具" scheme="http://peng-ym.github.io/tags/%E6%8A%98%E8%85%BE%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
</feed>
